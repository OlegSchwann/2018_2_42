Вынесеное на обсуждение api сервера.
Планируется 4 элемента в системе: 
    nginx как точка входа,
    go сервер для авторизации,
    go сервер для игровых комнат,
    postgresql как база данных для пользователей.
    
группы url
    /               точка входа, index.html
    /media/*        аватарки пользователей
    /static/*       картинки, css, js
    /api/v1/*       проксирование на сервер авторизации
    /game/v1/main   проксирование на websocket serwer

Задел на локализацию сообщений сервера: Сервер возвращает английские фразы по результатам каждого действия, которые являются ключами в map c фразами на нужном языке.
TODO: Выяснить, какие свои данные может изменять пользователь. С точки зрения игры это не нужно.

Регистрация пользователей обычная.
POST
/api/v1/regular-registration
json
request body:
{
    "login": "",
    "password": ""
}
answer
201 Created, и заголовок set cookie c токеном <-- http only tocken
{
    "status": "сreated",
    "message": "successful_normal_registration"
}
409 Conflict
{
    "status": "conflict",
    "message": "login_is_not_unique"
}
422 Unprocessable Entity
{
    "status": "unprocessable_entity",
    "message": "empty_login"
}
422 Unprocessable Entity
{
    "status": "unprocessable_entity",
    "message": "weak_password"
}
400 Bad Request
{
    "status": "bad_request",
    "message": "invalid_request_format"
}

Регистрация временного пользователя, что бы можно было играть без проблем, просто введя имя.
(Реализовать потом, не критично.)
POST
/api/v1/disposable-registration
json
request body:
{
    "login": ""
}
answer
201 Created, и заголовок set cookie c токеном <-- http only tocken
{
    "status": "сreated",
    "message": "successful_disposable_registration"
}
409 Conflict
{
    "status": "conflict",
    "message": "login_is_not_unique"
}
422 Unprocessable Entity
{
    "status": "unprocessable_entity",
    "message": "empty_login"
}
400 Bad Request
{
    "status": "bad_request",
    "message": "invalid_request_format"
}

страницы авторизации
POST
/api/v1/password-authorization
json
request body:
{
    "login": "",
    "password": ""
}
answer
202 Accepted, и заголовок set cookie c токеном <-- http only tocken
{
    "status": "accepted",
    "message": "successful_password_login"
}
403 Forbidden 
{
    "status": "forbidden",
    "message": "wrong_login_or_password"
}
400 Bad Request
{
    "status": "bad_request",
    "message": "invalid_request_format"
}

таблица лидеров
На странице со списком лидеров должна присутствовать пагинация
GET
/api/v1/leaderboard
get params "limit" "offset"
Пример /api/v1/leaderboard&limit=10&offset=0
Авторизация для действия не требуется.
Возвращается уже отсортированный массив: сначала по количеству побед по убыванию, потом по количеству сыграных игр по возрастанию. 

answer
202 Accepted
[
    {
        "login": "",
        "gamesPlayed": 0,
        "wins": 0
    }
]

профиль пользователя
GET
/api/v1/user-data
get param "login"
Пример: /api/v1/user-data?login=admin

авторизация для действия не требуется.
json
{
    "login": "",
    "avatar_address": "",
    "games_played": 0,
    "wins": 0
}

Возможность изменить аватарку
POST
/api/v1/set-avatar
multipart/form-data
поле 'avatar' <!--<input type="file" name="avatar">-->
answer status
202 Accepted, и заголовок set cookie c токеном <-- http only tocken
{
    status: accepted
    message: successful set awatar
}
403 Forbidden 
{
    status: forbidden
    message: not authorized
}
400 Bad Request
{
    status: bad request
    message: invalid request format
}
422 Unprocessable Entity
{
    status: unprocessable entity
    message: рicture is too big
}

Подключене и вход в игру
/game/v1/main
Требуется быть авторизованным
Требуется прийти за WebSocket соединением:
    HTTP/1.1 101 Switching Protocols
    Upgrade: websocket 
    Connection: Upgrade
Более подробно роутинг и формат внутри websocket соединения будет описано позже.

