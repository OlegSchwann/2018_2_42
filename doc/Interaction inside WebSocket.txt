портируем игру Rock Paper Scissors in ICQ (RPS)
в Web на html5

Основная идея API: состояние хранится и на клиенте и на сервере, сервер авторитарен,
изменяет состояние на клиенте вызывая функции.


Пример игровой партии с акцентом на взаимодействия.
Пометки '|' справа от описания - период интерактивности и ожидания действий игрока,
в моменты без пометки клиент только ждёт сервер.
┌──────────────────────────────────┬──────────────────────────────────┬──────────────────────────────────┐
|           игрок 1                |            Сервер                |           игрок 2                |
|Приходит с валидной кукой
                                   |Upgrade соединения до websocket,
                                   |вставка в очередь с пометкой '1'.
                                   |
                                   |Ждёт загрузки карты от
                                   |пользователя. Ждёт второго
                                   |пользователя для создания комнаты.
|Запрашивает у игрока конфигурацию
|синих персонажей.
|(координаты на фронте                                                |приходит с валидной кукой
|всегда в нижней части экрана      |Upgrade соединения до websocket,
|                                  |помечает как '2', объединяет с
|  0  1  2  3  4  5  6 red         |пользователем '1', создаёт игровую|запрашивает у пользователя
|  7  8  9 10 11 12 13             |комнату.                          |конфигурацию синих
| 14 15 16 17 18 19 20                                                |персонажей
| 21 22 23 24 25 26 27                                                |
| 28 29 30 31 32 33 34 blue <--                                       |
| 35 36 37 38 39 40 41                                                |отправляет конфигурацию
|передаётсяю positionId, число                                        |персонажей
|                                  |валидирует, отзеркаливает,
|                                  |загружает в карту
|
|отправляет                        |валидирует, не изменяет
|ставит loader                     |загружает в карту
                                   |проверяет, что оба игрока создали
                                   |команду, присылает полное состояние
                                   |обоим игрокам с учётом вращения
|принимает карту, уберает loader   |                                  |принимает карту, уберает loader
                                   |отправляет "ваш ход" первому                                    
|ставит синий флажок ваш ход       |отправляет "ход соперника"         
|ждёт пользователя                                                    |ставит красный флажок
|                                                                     |ход соперника
|                                                                      
|пользователь нажимает на                                               
|персонажа, появляются стрелочки
|ползователь двигает персонажа
|клиент отсылает с какой кординаты
|в какую двигается пользователь
                                   |сервер смотрит, куда перемещается
                                   |персонаж.
                                   |предположим, целевая клетка пуста
                                   |перемещает персонажа на сервере
                                   |в комнате,
                                   |отправляет действие [move]
                                   |пользователю 1
|двигает персонажа в клетку        |отправляет действие [move]
|что в ответе сервера              |пользователю 2 (отзеркаливая
                                   |координаты)
                                                                      |двигает персонажа
                                   |отправляет "ваш ход" второму
|меняет флажок                     |отправляет "ход соперника" первому|меняет флажок
                                                                      |ждёт пользователя
                                                                      |
                                                                      |
                                                                      |пользователь двигает персонажа
                                                                      |клиент отсылает с какой кординаты
                                                                      |в какую двигается пользователь
                                   |сервер смотрит, куда перемещается
                                   |персонаж.
                                   |предположим, в целевой клетке враг
                                   |сервер проверяет первосходство
                                   |предметов персонажей
                                   |предположим, первый победил.
                                   |отправляет действие [attak]
                                   |(кто, кого, цвет обоих,
                                   |кто проиграл)первому
|отрисовывает анимацию,            |отправляет действие [attak]
|убирает одного персонажа          |(кто, кого, цвет обоих,
                                   |кто проиграл)второму
                                   |отправляет обновление оружия      |отрисовывает анимацию,
                                   |первому                           |убирает одного персонажа
|обновляет оружие персонажа
                                   |отправляет "ваш ход" первому
|ставит синий флажок ваш ход       |отправляет "ход соперника"         
|ждёт пользователя                                                    |ставит красный флажок
|                                                                     |ход соперника
|
|Ползователь двигает персонажа,
|клиент отсылает откуда и куда.
                                   |сервер смотрит, куда перемещается
                                   |персонаж.
                                   |предположим, в целевой клетке 
                                   |такой же персонаж, или координаты
                                   |невалидны.
                                   |сервер отсылает заново состояние 
                                   |игровой комнаты, думая, что
                                   |произошло рассогласование
|Сверяет/перерисовывает поле,
|оставляет флажок 'ваш ход'.
|
|
|Игрок пытается ещё раз сходить,
|клиент отсылает откуда и куда.
                                   |сервер смотрит, куда перемещается
                                   |персонаж.
                                   |предположим, в целевой клетке враг
                                   |сервер проверяет первосходство
                                   |предметов персонажей
                                   |предположим, что равные предметы
                                   |
                                   |отправляет обновление оружия врага         
                                   |первому                                   
                                   |/*выбор нового оружия при
                                   |  одинаковом состоянии - целый
                                   |  дополнительный экран. Потом, если
                                   |  успеем, равно как и ловушку. */
                                   |отправляет "ваш ход" второму
                                   |отправляет "ход соперника" первому|меняет флажок
|меняет флажок                                                        |ждёт пользователя
                                                                      |
                                                                      |
                                                                      |ползователь двигает персонажа
                                                                      |клиент отсылает с какой кординаты
                                                                      |в какую двигается пользователь
                                   |сервер смотрит, куда перемещается
                                   |персонаж.
                                   |предположим, оружие врага - флаг
                                   |отсылает действие [gameover]
|отрисовывает менюшку поражения    |(кто победил) первому
|кнопку "играть снова"             |отсылает действие [gameover]
                                   |(кто победил) второму             |отрисовывает менюшку выигрыша,
                                   |уничтожает игровую комнату        |кнопку ещё раз.
                                   |закрывает соединение. 
└──────────────────────────────────┴──────────────────────────────────┴──────────────────────────────────┘

Типы данных, как они передаются между сервером и клиентом.
Координаты:
    positionId number 0 <= x <= 41

Оружие "weapon"
  string "rock", "scissors", "paper", "flag"

Персонаж
  Цвет "color"
  string "red", "blue"
  Взаимодействовать игрок может только с персонажами синего цвета.

  Оружие "weapon"
  тип оружие или поле отсутствует, если неизвестно

Карта
  Массив 6*7 персонажей или null для пустой клетки.


Заметка для сервера сервере:
  персонаж {
    принадлежность [1, 2]
    оружие [камень, ножницы, бумага, флаг] // флаг как оружие, которое всегда проигрывает
    спалил ли оружие перед соперником
 }


"статус" комнаты, возвращаемый при инициализации.
содержит информацию сервера, но без оружия соперника, если он ещё не принимал участие,
и повёрнутую для второго игрока

for x := 0; x<=6; x++{                        
  for y := 0; y <= 5; y++{                  
        user2Map[positionId] = serverMap[41 - positionId]  
    }                                         
}                                             
                                              
                                              
Список handler's, которые необходимо реализовать:
На сервере по http:
    Установление соединения к игре, протокол http, /game/v1/instance1

На сервере внутри websocket:
    Первоначальная загрузка карты
    "upload_map"

    Движение персонажа
    "attempt_go_to_cell"

На клиенте внутри websocket:
    Загрузка всей карты
    "download_map"

    Установки статуса чей ход.
    "your_turn"

    Простое движение пресонажа любого игрока.
    "move_character"

    Отрисовка боя, уничтожение одного персонажа.
    "attack"

    Обновление или появление оружия у персонажа.
    "add_weapon"

    Конец игры, отображение торжествующего персонажа с флагом соперника.
    "gameover"


Примеры всех запросов, эталон формата.

"upload_map"
{
    "color": "blue",
    "weapons": [
      "scissors", //левый нижний
      "rock",
      "rock",
      "scissors",
      "paper",
      "rock",
      "paper",  //правый нижний
      "paper",  //левый верхний
      "scissors",
      "paper",
      "rock",
      "flag",
      "scissors",
      "paper" //правый верхний
  ]
}

"attempt_go_to_cell"
{
  "from": positionId
  "to": positionId
}

"download_map"
[
  {
     "color": "red",
     "weapon": null //оружие еще не спалилось
  },
  {
     "color": "red",
     "weapon": "rock" // оружие спалилось
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  {
     "color": "red",
     "weapon": null
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
     "color": "blue",
     "weapon": "scissors"
  },
  {
    "color": "blue",
    "weapon": "rock"
  },
  {
    "color": "blue",
    "weapon": "rock"
  },
  {
    "color": "blue",
    "weapon": "scissors"
  },
  {
    "color": "blue",
    "weapon": "paper"
  },
  {
    "color": "blue",
    "weapon": "rock"
  },
  {
    "color": "blue",
    "weapon": "paper"
  }
  null, // убит
  {
    "color": "blue",
    "weapon": "scissors"
  },
  {
    "color": "blue",
    "weapon": "paper"
  },
  {
    "color": "blue",
    "weapon": "rock"
  },
  {
    "color": "blue",
    "weapon": "flag"
  },
  {
    "color": "blue",
    "weapon": "scissors"
  },
  {
    "color": "blue",
    "weapon": "paper"
  }
]

"your_turn"
true

"move_character"
{
  "from": positionId
  "to": positionId
}

"attack"
{
  "winner": {
    "coordinates": positionId,
    "weapon": "scissors"
  },
  "loser": {
    "coordinates": positionId,
    "weapon": "paper"
  }
}

"add_weapon"
{
  "coordinates": positionId,
  "weapon": "paper"
}

"gameover"
{
  "winner_color": "blue"
}
